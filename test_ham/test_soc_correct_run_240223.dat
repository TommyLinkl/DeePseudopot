***************************
for this test to pass, make sure the ...Integral_dan() functions
are called when the hamiltonian is constructing SO and NL matrices.
      
Actually, not switching to ...Integral_dan() also gives the correct results. 
This further demonstrates the integrals are calculated correctly. 
      
This test requires at least 64GB of memory to cache the SO and NL matrices. 
We recommend running this test on a single Perlmutter compute node interactively.
***************************
All settings: 
        Using separateKptGrad. This can decrease the peak memory load during the fitting code.
        Not doing multiprocessing.



***************************
Test with cacheing
***************************
initializing SO: kpt 1/8
initializing SO: kpt 2/8
initializing SO: kpt 3/8
initializing SO: kpt 4/8
initializing SO: kpt 5/8
initializing SO: kpt 6/8
initializing SO: kpt 7/8
initializing SO: kpt 8/8
initializing NL pots: kpt 1/8
initializing NL pots: kpt 2/8
initializing NL pots: kpt 3/8
initializing NL pots: kpt 4/8
initializing NL pots: kpt 5/8
initializing NL pots: kpt 6/8
initializing NL pots: kpt 7/8
initializing NL pots: kpt 8/8
Finished calculating the SOC band structure... Elapsed time: 749.12 seconds
SOC, zunger-style pot: c code and python code return same band energies: True


***************************
Test without cacheing
***************************
WARNING: Calculation requires SObool, but we are not cache-ing the SOmats and NLmats. Without multiprocessing parallelization. This is not recommended. 
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 1/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 1/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 2/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 2/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 3/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 3/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 4/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 4/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 5/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 5/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 6/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 6/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 7/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 7/8
DANGEROUS!!! WARNING. Attempting to build the SOmat, but 1) no precomputed SOmats are stored in shared memory, 2) no cached SOmatrices in the ham class. 
Calculating the SOmats for each kpt on the fly. 
initializing SO: kpt 8/8
DANGEROUS!!! WARNING. Attempting to build the NLmat, but 1) no precomputed NLmats are stored in shared memory, 2) no cached NL matrices in the ham class. 
Calculating the NLmats on the fly. 
initializing NL pots: kpt 8/8
Finished calculating the SOC band structure... Elapsed time: 700.24 seconds
SOC, zunger-style pot: c code and python code return same band energies: True
